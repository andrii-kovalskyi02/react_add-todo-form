{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","target","rel","TodoInfo","todo","title","completed","classNames","id","TodoList","todoList","map","username","getUser","userId","usersFromServer","find","todos","App","useState","setTitle","setUserId","setTodo","isTitleEntered","setIsTitleEntered","isUserIdSelected","setIsUserIdSelected","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","type","placeholder","value","onChange","inputValue","test","slice","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27c4c32a.chunk.js","sourcesContent":["import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n      data-id={todo.id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todoList: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todoList }) => (\n  <section className=\"TodoList\">\n    {todoList.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todoList, setTodo] = useState(todos);\n  const [isTitleEntered, setIsTitleEntered] = useState(true);\n  const [isUserIdSelected, setIsUserIdSelected] = useState(true);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const inputValue = event.target.value;\n    const allowedChars = /[a-z-а-щьюяґєії'\\d\\s]/i;\n\n    if (allowedChars.test(inputValue.slice(-1)) || !inputValue) {\n      setIsTitleEntered(true);\n      setTitle(inputValue);\n    }\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setIsUserIdSelected(true);\n    setUserId(+event.target.value);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setIsTitleEntered(false);\n    }\n\n    if (!userId) {\n      setIsUserIdSelected(false);\n    }\n\n    if (title && userId) {\n      const newTodo: Todo = {\n        id: Math.max(...todoList.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      };\n\n      setTodo([...todoList, newTodo]);\n      resetForm();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            {' '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n          {!isTitleEntered && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleUserIdChange}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map((user: User) => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {!isUserIdSelected && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todoList={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}